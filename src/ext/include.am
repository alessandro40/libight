noinst_LTLIBRARIES += src/ext/libext.la

if USE_BUILTIN_LIBEVENT
    DIST_SUBDIRS = src/ext/libevent
    SUBDIRS = src/ext/libevent
endif

if USE_BUILTIN_LIBUTP
    DIST_SUBDIRS = src/ext/libutp
    SUBDIRS = src/ext/libutp
endif

src_ext_libext_la_SOURCES = \
    src/ext/strtonum.c \
    src/ext/http-parser/http_parser.c

libight_la_LIBADD += src/ext/libext.la

#
# YAML-CPP
#

if USE_BUILTIN_YAMLCPP

    lib_LTLIBRARIES += src/ext/libyaml-cpp.la

    # Adapt CXXFLAGS to yaml-cpp:
    src_ext_libyaml_cpp_la_CXXFLAGS = $(AM_CXXFLAGS) -Wno-deprecated-declarations -Wno-missing-prototypes

    src_ext_libyaml_cpp_la_SOURCES = \
	src/ext/yaml-cpp/src/stream.cpp \
	src/ext/yaml-cpp/src/emitter.cpp \
	src/ext/yaml-cpp/src/emit.cpp \
	src/ext/yaml-cpp/src/scantag.cpp \
	src/ext/yaml-cpp/src/emitterutils.cpp \
	src/ext/yaml-cpp/src/exp.cpp \
	src/ext/yaml-cpp/src/nodeevents.cpp \
	src/ext/yaml-cpp/src/tag.cpp \
	src/ext/yaml-cpp/src/emitfromevents.cpp \
	src/ext/yaml-cpp/src/convert.cpp \
	src/ext/yaml-cpp/src/binary.cpp \
	src/ext/yaml-cpp/src/parse.cpp \
	src/ext/yaml-cpp/src/node.cpp \
	src/ext/yaml-cpp/src/directives.cpp \
	src/ext/yaml-cpp/src/simplekey.cpp \
	src/ext/yaml-cpp/src/emitterstate.cpp \
	src/ext/yaml-cpp/src/regex_yaml.cpp \
	src/ext/yaml-cpp/src/memory.cpp \
	src/ext/yaml-cpp/src/scanscalar.cpp \
	src/ext/yaml-cpp/src/scanner.cpp \
	src/ext/yaml-cpp/src/singledocparser.cpp \
	src/ext/yaml-cpp/src/node_data.cpp \
	src/ext/yaml-cpp/src/ostream_wrapper.cpp \
	src/ext/yaml-cpp/src/parser.cpp \
	src/ext/yaml-cpp/src/contrib/graphbuilder.cpp \
	src/ext/yaml-cpp/src/contrib/graphbuilderadapter.cpp \
	src/ext/yaml-cpp/src/null.cpp \
	src/ext/yaml-cpp/src/nodebuilder.cpp \
	src/ext/yaml-cpp/src/scantoken.cpp

install-data-hook:
	HBASE=$(top_srcdir)/src/ext/yaml-cpp/include && \
	for HEADER in `find $$HBASE -type f`; do \
	    REL_HEADER=`echo $$HEADER | sed "s|$$HBASE/||g"`; \
	    HEADER_DIR=`dirname $$REL_HEADER`; \
	    $(MKDIR_P) $(DESTDIR)$(includedir)/$$HEADER_DIR; \
	    $(INSTALL_HEADER) $$HEADER $(DESTDIR)$(includedir)/$$REL_HEADER; \
	done
	BOOST_BASE=$(top_srcdir)/src/ext/boost && \
	for BOOST_MOD in `ls $$BOOST_BASE`; do \
	    if [ -d $$BOOST_BASE/$$BOOST_MOD/include ]; then \
	        HBASE=$$BOOST_BASE/$$BOOST_MOD/include; \
	        for HEADER in `find $$HBASE -type f`; do \
	            REL_HEADER=`echo $$HEADER | sed "s|$$HBASE/||g"`; \
	            HEADER_DIR=`dirname $$REL_HEADER`; \
	            $(MKDIR_P) $(DESTDIR)$(includedir)/$$HEADER_DIR; \
	            $(INSTALL_HEADER) $$HEADER \
	                $(DESTDIR)$(includedir)/$$REL_HEADER; \
	        done; \
	    fi; \
	done

endif
